# .github/workflows/create-new-pod-from-branch.yml

name: Create New RunPod Pod via Branch Push

on:
  push:
    branches:
      - run-runpod

env:
  DOCKER_IMAGE: "roma3213/maryrose-app:v3"
  DEFAULT_GPU_TYPE: "NVIDIA RTX A5000"
  CONTAINER_DISK_IN_GB: 50
  VOLUME_DISK_IN_GB: 50

jobs:
  create-pod-and-update:
    name: Create Pod and Update Main VM
    runs-on: ubuntu-latest
    steps:
      - name: Install RunPodCTL and jq
        run: |
          curl -L https://github.com/runpod/runpodctl/releases/latest/download/runpodctl-linux-amd64 -o runpodctl
          sudo install -m 0755 runpodctl /usr/local/bin/runpodctl
          sudo apt-get update && sudo apt-get install -y jq

      - name: Determine GPU Type
        id: get_gpu
        run: |
          GPU_FROM_COMMIT=$(git log -1 --pretty=%B | tail -n 1)
          if [[ "$GPU_FROM_COMMIT" == *"RTX"* ]] || [[ "$GPU_FROM_COMMIT" == *"A"* ]]; then
            echo "Found GPU in commit message: '$GPU_FROM_COMMIT'. Using it."
            echo "gpu_type=$GPU_FROM_COMMIT" >> $GITHUB_OUTPUT
          else
            echo "No valid GPU type in commit message. Using default: '${{ env.DEFAULT_GPU_TYPE }}'"
            echo "gpu_type=${{ env.DEFAULT_GPU_TYPE }}" >> $GITHUB_OUTPUT
          fi

      - name: Create new pod and get its ID
        id: create_pod
        env:
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
        run: |
          GPU_TO_CREATE="${{ steps.get_gpu.outputs.gpu_type }}"
          POD_NAME="ai-backend-$(date +%s)"
          echo "Attempting to create a new pod named '$POD_NAME' with GPU: '$GPU_TO_CREATE'"

          runpodctl create pod \
            --imageName "${{ env.DOCKER_IMAGE }}" \
            --gpuType "$GPU_TO_CREATE" \
            --containerDiskSize ${{ env.CONTAINER_DISK_IN_GB }} \
            --volumeSize ${{ env.VOLUME_DISK_IN_GB }} \
            --name "$POD_NAME" \
            --secureCloud
            
          echo "Pod creation command sent. Waiting 5 seconds before searching for it..."
          sleep 5

          echo "Searching for pod with name '$POD_NAME'..."
          # --- ИЗМЕНЕНИЕ: УБИРАЕМ --output json ---
          POD_JSON=$(runpodctl get pods | jq --arg name "$POD_NAME" '.[] | select(.name == $name)')

          if [ -z "$POD_JSON" ]; then
            echo "Error: Could not find the newly created pod. Waiting 10 more seconds..."
            sleep 10
            POD_JSON=$(runpodctl get pods | jq --arg name "$POD_NAME" '.[] | select(.name == $name)')
            if [ -z "$POD_JSON" ]; then
              echo "Fatal: Pod '$POD_NAME' not found after waiting."
              exit 1
            fi
          fi

          POD_ID=$(echo "$POD_JSON" | jq -r '.id')
          echo "Found pod. New Pod ID: $POD_ID"
          echo "pod_id=$POD_ID" >> $GITHUB_OUTPUT

      - name: Wait for pod to run and get URLs
        id: get_url
        env:
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
        run: |
          POD_ID=${{ steps.create_pod.outputs.pod_id }}
          echo "Waiting for pod $POD_ID to enter 'Running' state..."

          for i in {1..20}; do
            # --- ИЗМЕНЕНИЕ: УБИРАЕМ --output json ---
            STATUS=$(runpodctl get pod $POD_ID | jq -r '.desiredStatus')
            if [ "$STATUS" == "Running" ]; then echo "Pod is running!"; break; fi
            if [ "$STATUS" == "Terminated" ] || [ "$STATUS" == "Failed" ]; then echo "Error: Pod entered '$STATUS' state."; exit 1; fi
            echo "Current status: $STATUS. Waiting 15 seconds..."; sleep 15
          done

          # --- ИЗМЕНЕНИЕ: УБИРАЕМ --output json ---
          POD_INFO=$(runpodctl ge
